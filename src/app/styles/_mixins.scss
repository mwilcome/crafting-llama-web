@use 'theme' as *;
@use 'sass:color' as color;

/// Visually hides an element but keeps it accessible to screen readers
@mixin sr-only {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}

/// Truncate text to a single line with ellipsis
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

/// Multiline truncation (limited to `lines`)
@mixin line-clamp($lines: 2) {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
}

/// Standard card box styling
@mixin card($padding: $space-md) {
  background: $color-surface;
  border: 1px solid $color-gray-300;
  border-radius: $radius-md;
  padding: $padding;
  box-shadow: $shadow-sm;
}

/// Vertical list spacing
@mixin stack($gap: $space-md) {
  display: flex;
  flex-direction: column;
  gap: $gap;
}

/// Responsive container max-width + padding
@mixin container {
  max-width: 1280px;
  margin: 0 auto;
  padding: 0 $space-md;
}

/// Simple image preview wrapper
@mixin preview-frame($max-width: 200px) {
  max-width: $max-width;
  border: 1px solid $color-gray-300;
  border-radius: $radius-sm;
}

/// Accessible focus style
@mixin focus-ring {
  outline: 2px solid $color-accent;
  outline-offset: 2px;
}

/// Shared inner block for card/detail panes
@mixin info-block($padding: $space-md, $text-color: $color-text) {
  padding: $padding;
  color: $text-color;
  transition: color 0.2s ease;
}

/// Secondary text snippet
@mixin desc-text {
  font-size: $font-sm;
  color: $color-muted;
  margin-bottom: $space-sm;
  line-height: 1.4;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  transition: color 0.2s ease;
}

/// Compact field list block inside summary/review cards
@mixin field-list {
  font-size: $font-sm;
  color: $color-gray-700;
  margin-top: $space-sm;
}

/// Validation or alert message
@mixin error-text {
  color: $color-accent;
  font-size: $font-sm;
  margin-top: $space-xs;
}

/// Generic heading inside cards/lists
@mixin title-text {
  font-size: $font-base;
  font-weight: $weight-semibold;
  margin-bottom: $space-xs;
}


/// Shiny button bby
@mixin shiny-button(
  $color: #8000ff,
  $variant: filled,
  $padding-v: $space-xs,
  $padding-h: $space-md,
  $font-size: $font-base,
  $font-weight: $weight-medium
) {
  position: relative;
  padding: $padding-v $padding-h;
  border: 2px solid $color;
  border-radius: $radius-xl;
  font-family: $font-body;
  font-size: $font-size;
  font-weight: $font-weight;
  letter-spacing: 0.05em;
  cursor: pointer;
  overflow: hidden;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  text-align: center;

  @if $variant == filled {
    background-color: $color;
    color: white;
  } @else if $variant == outline {
    background-color: transparent;
    color: $color;
  } @else {
    @error "Invalid variant: #{$variant}. Use 'filled' or 'outline'.";
  }

  &::after {
    content: "";
    position: absolute;
    background-color: rgba(255, 255, 255, 0.3); // Base glare for filled
    height: 100%;
    width: 150%;
    top: 0;
    left: -150%;
    border-bottom-right-radius: 50%;
    border-top-left-radius: 50%;
    filter: blur(3px);
    transition-duration: 0.5s;
    @if $variant == outline {
      background-color: rgba(255, 255, 255, 0.2); // Reduced opacity for un-hovered outline
    }
  }

  &:hover::after {
    transform: translateX(250%);
    transition-duration: 0.5s;
  }

  &:hover {
    transform: translateY(-1px);
    box-shadow: $shadow-md;
    @if $variant == filled {
      background-color: color.adjust($color, $lightness: -5%);
    } @else if $variant == outline {
      background-color: rgba($color, 0.1);
      color: color.adjust($color, $lightness: -5%);
    }
  }

  &:active {
    transform: scale(0.98);
  }

  &:disabled {
    border-color: $color-gray-300;
    background-color: $color-gray-300;
    color: $color-gray-500;
    cursor: not-allowed;
    &::after {
      display: none;
    }
  }

  &:focus-visible {
    @include focus-ring;
  }
}